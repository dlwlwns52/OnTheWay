plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'kotlin-android'
}


// 'localProperties'에 'Properties' 객체를 생성
def localProperties = new Properties()

// 프로젝트 루트 디렉터리에 있는 'local.properties' 파일을 가리키는 객체 생성
def localPropertiesFile = rootProject.file('local.properties')

// 'local.properties' 파일이 존재한다면
if (localPropertiesFile.exists()) {
    // 파일을 읽어 'localProperties' 객체에 로드 (UTF-8 인코딩 사용)
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

// 'local.properties' 파일에서 Flutter SDK 경로를 가져오기
def flutterRoot = localProperties.getProperty('flutter.sdk')

// 만약 Flutter SDK 경로가 정의되지 않은 경우, 예외를 발생시킴
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

// 'flutter.versionCode' 값을 가져오기 (없으면 기본값 '1'로 설정)
def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

// 'flutter.versionName' 값을 가져오기 (없으면 기본값 '1.0'으로 설정)
def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// 필요한 플러그인들을 적용함
//apply plugin: "com.android.application" // Android 애플리케이션용 플러그인
//apply plugin: "com.google.gms.google-services" // Google 서비스 관련 플러그인
//apply plugin: "kotlin-android" // Kotlin을 지원하는 플러그인

// Flutter 빌드 스크립트를 적용
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.example.OnTheWay"
    compileSdkVersion 34

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.OnTheWay"
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:32.2.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.android.gms:play-services-auth:20.6.0'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
}
