// 이메일 인증 로직
Container(
  margin: EdgeInsets.fromLTRB(0, 0, 0, 20),
  child: Column(
    mainAxisAlignment: MainAxisAlignment.start,
    crossAxisAlignment: CrossAxisAlignment.start,
    children: [
      Container(
        margin: EdgeInsets.fromLTRB(0, 0, 0, 10),
        child: Align(
          alignment: Alignment.topLeft,
          child: Text(
            '이메일 인증',
            style: TextStyle(
              fontFamily: 'Pretendard',
              fontWeight: FontWeight.w600,
              fontSize: 15,
              height: 1,
              letterSpacing: -0.4,
              color: Color(0xFF424242),
            ),
          ),
        ),
      ),
      Container(
        width: double.infinity,
        margin: EdgeInsets.fromLTRB(0, 0, 0, 10),
        decoration: BoxDecoration(
          color: Color(0xFFFFFFFF),
        ),
        child: Align(
          alignment: Alignment.topLeft,
          child: TextFormField(
            onTap: () {
              if (!_isEmailVerified) {
                HapticFeedback.lightImpact(); // 텍스트 필드를 터치할 때 햅틱 피드백
              }
            },
            enabled: !_isEmailVerified && !_emailCodeSent,
            controller: _emailInputController,
            textInputAction: TextInputAction.done,
            cursorColor: Color(0xFF1D4786),
            keyboardType: TextInputType.emailAddress, // 이메일 입력 전용 키보드 설정
            onFieldSubmitted: (value) {
              HapticFeedback.lightImpact(); // 다음 필드로 이동할 때 햅틱 피드백
            },
            decoration: InputDecoration(
              hintText: '이메일을 입력해주세요.',
              hintStyle: TextStyle(
                fontFamily: 'Pretendard',
                fontWeight: FontWeight.w500,
                fontSize: 16,
                height: 1,
                letterSpacing: -0.4,
                color: Color(0xFF767676),
              ),
              contentPadding: EdgeInsets.symmetric(vertical: 16, horizontal: 12), // 내부 여백 조정
              border: OutlineInputBorder(
                borderRadius: BorderRadius.circular(10),
              ),
              enabledBorder: OutlineInputBorder(
                borderSide: BorderSide(
                  color: _isEmailInputNotEmpty ? Color(0xFF1D4786) : Color(0xFFD0D0D0),
                ),
                borderRadius: BorderRadius.circular(8),
              ),
              focusedBorder: OutlineInputBorder(
                borderSide: BorderSide(color: Color(0xFF1D4786)),
                borderRadius: BorderRadius.circular(8),
              ),
              errorText: _emailInputErrorText,
            ),
            validator: (value) {
              if (value == null || value.trim().isEmpty) {
                return '이메일을 입력해주세요.';
              }
              return null;
            },
          ),
        ),
      ),
      _emailCodeSent
          ? Column(
              children: [
                Container(
                  width: double.infinity,
                  margin: EdgeInsets.fromLTRB(0, 0, 0, 10),
                  decoration: BoxDecoration(
                    color: Color(0xFFFFFFFF),
                  ),
                  child: Align(
                    alignment: Alignment.topLeft,
                    child: TextFormField(
                      onTap: () {
                        if (!_isEmailVerified) {
                          HapticFeedback.lightImpact(); // 텍스트 필드를 터치할 때 햅틱 피드백
                        }
                      },
                      enabled: !_isEmailVerified,
                      controller: _verificationCodeController,
                      textInputAction: TextInputAction.done,
                      cursorColor: Color(0xFF1D4786),
                      keyboardType: TextInputType.number, // 인증번호 입력 전용 키보드 설정
                      onFieldSubmitted: (value) {
                        HapticFeedback.lightImpact(); // 다음 필드로 이동할 때 햅틱 피드백
                      },
                      decoration: InputDecoration(
                        hintText: '인증번호를 입력해주세요.',
                        hintStyle: TextStyle(
                          fontFamily: 'Pretendard',
                          fontWeight: FontWeight.w500,
                          fontSize: 16,
                          height: 1,
                          letterSpacing: -0.4,
                          color: Color(0xFF767676),
                        ),
                        contentPadding: EdgeInsets.symmetric(vertical: 11, horizontal: 12), // 내부 여백 조정
                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(10),
                        ),
                        enabledBorder: OutlineInputBorder(
                          borderSide: BorderSide(
                            color: _isVerificationCodeNotEmpty ? Color(0xFF1D4786) : Color(0xFFD0D0D0),
                          ),
                          borderRadius: BorderRadius.circular(8),
                        ),
                        focusedBorder: OutlineInputBorder(
                          borderSide: BorderSide(color: Color(0xFF1D4786)),
                          borderRadius: BorderRadius.circular(8),
                        ),
                        errorText: _verificationCodeErrorText,
                      ),
                      validator: (value) {
                        if (value == null || value.trim().isEmpty) {
                          return '인증번호를 입력해주세요.';
                        }
                        return null;
                      },
                    ),
                  ),
                ),
                _isEmailVerified
                    ? Container()
                    : Text(
                        "남은 시간: $_remainingVerificationTime 초",
                        style: TextStyle(
                          fontFamily: 'Pretendard',
                          fontWeight: FontWeight.w600,
                          fontSize: 13,
                          height: 1,
                          letterSpacing: -0.4,
                          color: Color(0xFF1D4786),
                        ),
                      ),
                SizedBox(height: 5),
              ],
            )
          : Container(),
      GestureDetector(
        onTap: () {
          if (_emailInputController.text.isNotEmpty && !_isEmailVerified) {
            HapticFeedback.lightImpact();
            _emailCodeSent ? _confirmEmailVerification() : _requestEmailVerification();
          }
          if (_isEmailVerified) {
            HapticFeedback.lightImpact();
            ScaffoldMessenger.of(context).showSnackBar(
              SnackBar(
                content: Text("인증이 완료되었습니다!", textAlign: TextAlign.center),
                duration: Duration(seconds: 3),
              ),
            );
          }
        },
        child: Container(
          width: double.infinity,
          decoration: BoxDecoration(
            border: Border.all(color: _emailInputController.text.isNotEmpty ? Color(0xFF1D4786) : Color(0xFFF6F7F8)),
            borderRadius: BorderRadius.circular(8),
            color: _emailInputController.text.isNotEmpty ? Color(0xFF1D4786) : Color(0xFFF6F7F8),
          ),
          child: Container(
            padding: EdgeInsets.fromLTRB(3.3, 15, 0, 15),
            child: _isEmailVerified
                ? Text(
                    '인증 완료',
                    style: TextStyle(
                      fontFamily: 'Pretendard',
                      fontWeight: FontWeight.w500,
                      fontSize: 16,
                      height: 1,
                      letterSpacing: -0.4,
                      color: _emailInputController.text.isNotEmpty ? Colors.white : Color(0xFF767676),
                    ),
                    textAlign: TextAlign.center,
                  )
                : Text(
                    _emailCodeSent ? "인증 하기" : "인증 요청",
                    style: TextStyle(
                      fontFamily: 'Pretendard',
                      fontWeight: FontWeight.w500,
                      fontSize: 16,
                      height: 1,
                      letterSpacing: -0.4,
                      color: _emailInputController.text.isNotEmpty ? Colors.white : Color(0xFF767676),
                    ),
                    textAlign: TextAlign.center,
                  ),
          ),
        ),
      ),
    ],
  ),
);

// 이메일 인증 요청 메서드
Future<void> _requestEmailVerification() async {
  try {
    String email = _emailInputController.text.trim();
    await _auth.currentUser!.sendEmailVerification(); // Firebase 이메일 인증 링크 전송
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text("이메일 인증 링크가 전송되었습니다!", textAlign: TextAlign.center),
        duration: Duration(seconds: 2),
      ),
    );
    setState(() {
      _emailCodeSent = true;
    });
    _startEmailVerificationTimer(); // 타이머 시작
  } catch (e) {
    print('이메일 인증 요청 실패: $e');
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text('이메일 인증 요청에 실패했습니다. 다시 시도해주세요.', textAlign: TextAlign.center),
        duration: Duration(seconds: 2),
      ),
    );
  }
}

// 타이머 시작 메서드
void _startEmailVerificationTimer() {
  setState(() {
    _remainingVerificationTime = 300; // 5분(300초) 설정
  });

  _verificationTimer?.cancel(); // 기존 타이머가 있으면 취소

  _verificationTimer = Timer.periodic(Duration(seconds: 1), (timer) {
    setState(() {
      if (_remainingVerificationTime > 0) {
        _remainingVerificationTime--;
      } else {
        _verificationTimer?.cancel();
        _emailCodeSent = false; // 시간이 초과되면 인증 요청을 다시 할 수 있도록 설정
        print("인증 시간이 초과되었습니다. 다시 시도해주세요.");
      }
    });
  });
}

// 이메일 인증 확인 메서드
Future<void> _confirmEmailVerification() async {
  try {
    await _auth.currentUser!.reload(); // 사용자 정보를 새로 고침하여 인증 상태 확인
    if (_auth.currentUser!.emailVerified) {
      setState(() {
        _isEmailVerified = true;
        _verificationTimer?.cancel();
      });
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text("이메일 인증이 완료되었습니다!", textAlign: TextAlign.center),
          duration: Duration(seconds: 3),
        ),
      );
    } else {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text("이메일 인증이 완료되지 않았습니다.", textAlign: TextAlign.center),
          duration: Duration(seconds: 2),
        ),
      );
    }
  } catch (e) {
    print('이메일 인증 확인 실패: $e');
  }
}
