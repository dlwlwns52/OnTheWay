         if (userData['owner_email'] == currentUserEmail) ...[
                              Dismissible(
                                key: Key(doc.id),
                                confirmDismiss: (direction) async {
                                  // 스와이프 후 삭제 확인 대화상자 표시
                                  showNicknameConfirmationDialog(context, doc.id, userData['owner_email_nickname'], userData['helper_email_nickname'], false);
                                },
                                background: Container(
                                  color: Colors.red,
                                  child: Align(
                                    alignment: Alignment.center, // 왼쪽 정렬
                                    child: Row(
                                      mainAxisSize: MainAxisSize.min, // 내용물 크기에 맞게 Row 크기 조절
                                      children: <Widget>[
                                        Icon(Icons.delete, color: Colors.white, size: 50), // 아이콘
                                        Text(
                                          ' 삭제', // 텍스트
                                          style: TextStyle(
                                            color: Colors.white,
                                            fontWeight: FontWeight.bold,
                                            fontSize: 20,
                                          ),
                                        ),
                                      ],
                                    ),
                                  ),
                                ),
                                child: FutureBuilder<String?>(
                                  future:  _getProfileImage(userData['helper_email']),
                                  builder: (context, snapshot) {
                                    if (snapshot.connectionState == ConnectionState.waiting) {
                                      return SizedBox.shrink(); // 아무것도 표시하지 않음
                                    }
                                    if (snapshot.hasError) {
                                      return Text('Error: ${snapshot.error}'); // 오류 발생 시 표시할 위젯
                                    }
                                    if (!snapshot.hasData || snapshot.data == null) {
                                      return Text('No data available'); // 데이터가 없을 때 표시할 위젯
                                    }

                                    String? profileImageUrl = snapshot.data;

                                    return GestureDetector(
                                      onTap: () {
                                        HapticFeedback.lightImpact();
                                        String owner_receiver = userData['owner_email_nickname'];
                                        FirebaseFirestore.instance
                                            .collection('ChatActions')
                                            .doc(doc.id)
                                            .update({'messageCount_$owner_receiver': 0});

                                        Navigator.push(
                                            context,
                                            new MaterialPageRoute(
                                                builder: (context) => ChatScreen(
                                                  senderName: userData['owner_email_nickname'],
                                                  receiverName : userData['helper_email_nickname'],
                                                  receiverUid: userData['helperUid'],
                                                  documentName : doc.id,
                                                  photoUrl : profileImageUrl,
                                                )));
                                      },
                                      onLongPress: (){
                                        HapticFeedback.heavyImpact();
                                        showNicknameConfirmationDialog(context, doc.id, userData['owner_email_nickname'], userData['helper_email_nickname'], false);
                                      },
                                      child:
                                      Container(
                                        margin: EdgeInsets.fromLTRB(20, 0, 20, 10),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.start,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              padding: EdgeInsets.fromLTRB(0, 5, 0, 5),
                                              decoration: BoxDecoration(
                                                border: Border(
                                                  bottom: BorderSide(
                                                    color: Color(0xFFE3E3E3),
                                                    width: 1,
                                                  ),
                                                ),
                                              ),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                children: [
                                                  Row(
                                                    mainAxisAlignment: MainAxisAlignment.start,
                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                    children: [
                                                      GestureDetector(
                                                        onTap: () {
                                                          HapticFeedback.lightImpact();
                                                          if (profileImageUrl!.isNotEmpty) {
                                                            Navigator.push(
                                                              context,
                                                              MaterialPageRoute(
                                                                builder: (context) => FullScreenImage(photoUrl: profileImageUrl),
                                                              ),
                                                            );
                                                          } else {
                                                            ScaffoldMessenger.of(context).showSnackBar(
                                                              SnackBar(
                                                                content: Text(
                                                                  '기본 프로필 사진입니다.',
                                                                  textAlign: TextAlign.center,
                                                                ),
                                                                duration: Duration(seconds: 2),
                                                              ),
                                                            );
                                                          }
                                                        },
                                                        child: Container(
                                                          margin: EdgeInsets.fromLTRB(0, 0, 10, 0),
                                                          child: Container(
                                                            decoration: BoxDecoration(
                                                              shape: BoxShape.circle,
                                                              gradient: LinearGradient(
                                                                colors: [Color(0xFF1D4786), Color(0xFF1D4786)],
                                                                begin: Alignment.topLeft,
                                                                end: Alignment.bottomRight,
                                                              ),
                                                              boxShadow: [
                                                                (profileImageUrl != null && profileImageUrl.isNotEmpty)
                                                                    ? BoxShadow(
                                                                  color: Colors.black.withOpacity(0.1),
                                                                  spreadRadius: 1,
                                                                  blurRadius: 1,
                                                                  offset: Offset(0, 1), // 그림자 위치 조정
                                                                )
                                                                    : BoxShadow(),
                                                              ],
                                                            ),
                                                            child: CircleAvatar(
                                                              radius: 25, // 반지름 설정 (32 / 2)
                                                              backgroundColor: Colors.grey[200],
                                                              child: (profileImageUrl != null && profileImageUrl.isNotEmpty)
                                                                  ? null
                                                                  : Icon(
                                                                Icons.account_circle,
                                                                size: 50, // 원래 코드에서 width와 height가 32였으므로 여기에 맞춤
                                                                color: Color(0xFF1D4786),
                                                              ),
                                                              backgroundImage: profileImageUrl != null && profileImageUrl.isNotEmpty
                                                                  ? NetworkImage(profileImageUrl)
                                                                  : null,
                                                            ),
                                                          ),
                                                        ),
                                                      ),

                                                      Container(
                                                        margin: EdgeInsets.fromLTRB(4, 10, 0, 10),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.start,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Text(
                                                              userData['helper_email_nickname'],
                                                              style: TextStyle(
                                                                fontFamily: 'Pretendard',
                                                                fontWeight: FontWeight.w600,
                                                                fontSize: 17,
                                                                height: 1,
                                                                letterSpacing: -0.4,
                                                                color: Color(0xFF222222),
                                                              ),
                                                            ),
                                                            SizedBox(height: 10),
                                                            Container(
                                                              width: MediaQuery.of(context).size.width * 0.5,
                                                              child: Text(
                                                                "$lastMessage",
                                                                style: TextStyle(
                                                                  fontFamily: 'Pretendard',
                                                                  fontWeight: FontWeight.w400,
                                                                  fontSize: 14,
                                                                  height: 1,
                                                                  letterSpacing: -0.4,
                                                                  color: Color(0xFF767676),
                                                                ),
                                                                overflow: TextOverflow.ellipsis,
                                                                maxLines: 1,
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                  Container(
                                                    margin: EdgeInsets.fromLTRB(0, 10, 0, 2.5),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.end,
                                                      crossAxisAlignment: CrossAxisAlignment.end,
                                                      children: [
                                                        Container(
                                                          margin: EdgeInsets.fromLTRB(0, 0, 0, 5),
                                                          child: Text(
                                                            '$timeAgo',
                                                            style: TextStyle(
                                                              fontFamily: 'Pretendard',
                                                              fontWeight: FontWeight.w400,
                                                              fontSize: 13,
                                                              height: 1,
                                                              letterSpacing: -0.3,
                                                              color: Color(0xFF767676),
                                                            ),
                                                          ),
                                                        ),
                                                        if (messageCount == 0) ...[
                                                          Container(
                                                          ),
                                                        ]
                                                        else ...[
                                                          Container(
                                                            padding: EdgeInsets.all(8.0),  // 원형 크기 조절
                                                            decoration: BoxDecoration(
                                                              color: Color(0xFF1D4786),  // 원형 배경 색상
                                                              shape: BoxShape.circle,    // 원형 모양
                                                            ),
                                                            child: Text(
                                                              messageCount > 99 ? '99+' :'${messageCount}',
                                                              style: TextStyle(
                                                                fontFamily: 'Pretendard',
                                                                fontWeight: FontWeight.w500,
                                                                fontSize: 12,
                                                                height: 1,
                                                                letterSpacing: -0.3,
                                                                color: Color(0xFFFFFFFF),  // 텍스트 색상
                                                              ),
                                                            ),
                                                          ),
                                                        ]
                                                      ],
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                            // 나머지 Container와 Row 등에도 동일하게 적용해주면 됩니다.
                                          ],
                                        ),
                                      ),
                                    );
                                  },
                                ),
                              ),
                            ],